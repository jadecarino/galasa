#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: CLI PR Build

on:
  workflow_call:
    inputs:
      changed:
        description: 'True if this module has been changed and should be rebuilt'
        required: true
        type: string
      artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts to download'
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:

  log-unchanged:
    name: Cli is unchanged
    if: ${{ inputs.changed == 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Log this module is unchanged
        run: |
          echo "The cli module is unchanged"

  build-cli:
    name: Build the Galasa CLI
    if: ${{ inputs.changed == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout CLI
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            modules/cli

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9
          cache-disabled: true
          gradle-home-cache-excludes: |
            caches/modules-2/files-2.1/dev.galasa/**

      # For any modules that were changed in this PR,
      # download their artifacts from this workflow run.

      - name: Download platform from this workflow
        id: download-platform
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: platform
          path: /home/runner/.m2/repository

      # For any modules that weren't changed in this PR,
      # download artifacts from the last successful workflow.
      - name: Download platform from last successful workflow
        if: ${{ steps.download-platform.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: platform
          path: /home/runner/.m2/repository
          github-token: ${{ github.token }}
          run-id: ${{ inputs.artifact-id }}

      - name: Download wrapping artifacts from this workflow
        id: download-wrapping
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: wrapping
          path: /home/runner/.m2/repository

      # The wrapping module wasn't changed, so download artifacts
      # from the last successful workflow.
      - name: Download wrapping from last successful workflow
        if: ${{ steps.download-wrapping.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: wrapping
          path: /home/runner/.m2/repository
          github-token: ${{ github.token }}
          run-id: ${{ inputs.artifact-id }}

      - name: Download gradle artifacts from this workflow
        id: download-gradle
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: gradle
          path: /home/runner/.m2/repository

      # The gradle module wasn't changed, so download artifacts
      # from the last successful workflow.
      - name: Download gradle from last successful workflow
        if: ${{ steps.download-gradle.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: gradle
          path: /home/runner/.m2/repository
          github-token: ${{ github.token }}
          run-id: ${{ inputs.artifact-id }}

      - name: Download maven artifacts from this workflow
        id: download-maven
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: maven
          path: /home/runner/.m2/repository

      # The maven module wasn't changed, so download artifacts
      # from the last successful workflow.
      - name: Download maven from last successful workflow
        if: ${{ steps.download-maven.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: maven
          path: /home/runner/.m2/repository
          github-token: ${{ github.token }}
          run-id: ${{ inputs.artifact-id }}

      - name: Download framework artifacts from this workflow
        id: download-framework
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: framework
          path: /home/runner/.m2/repository

      # For any modules that weren't changed in this PR,
      # download artifacts from the last successful workflow.
      - name: Download framework artifacts from last successful workflow
        if: ${{ steps.download-framework.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: framework
            path: /home/runner/.m2/repository
            github-token: ${{ github.token }}
            run-id: ${{ inputs.artifact-id }}

      - name: Download managers artifacts from this workflow
        id: download-managers
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: managers
          path: /home/runner/.m2/repository

      # The managers module wasn't changed, so download artifacts
      # from the last successful workflow.
      - name: Download managers artifacts from last successful workflow
        if: ${{ steps.download-managers.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: managers
            path: /home/runner/.m2/repository
            github-token: ${{ github.token }}
            run-id: ${{ inputs.artifact-id }}

      - name: Download obr artifacts from this workflow
        id: download-obr
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: obr
          path: /home/runner/.m2/repository

      # For any modules that weren't changed in this PR,
      # download artifacts from the last successful workflow.
      - name: Download obr artifacts from last successful workflow
        if: ${{ steps.download-obr.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: obr
            path: /home/runner/.m2/repository
            github-token: ${{ github.token }}
            run-id: ${{ inputs.artifact-id }}

      # Pull down dependencies with Gradle and put them in the right places.
      - name: Gather dependencies using Gradle
        working-directory: ./modules/cli
        run : |
          set -o pipefail
          gradle -b build.gradle installJarsIntoTemplates --info \
          --no-daemon --console plain \
          -PsourceMaven=/home/runner/.m2/repository \
          -PcentralMaven=https://repo.maven.apache.org/maven2/ \
          -PtargetMaven=${{ github.workspace }}/repo 2>&1 | tee build.log

      - name: Upload Gradle installJarsIntoTemplates log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cli-gradle-installJarsIntoTemplates-log
          path: modules/cli/build.log
          retention-days: 7 

      # Generate client code so galasactl can communicate with the API server.
      - name: Generate Go client code using openapi.yaml
        run : |
          docker run --rm --user $(id -u):$(id -g) -v ${{ github.workspace }}/modules/cli:/var/workspace ghcr.io/galasa-dev/openapi:main \
          java -jar /opt/openapi/openapi-generator-cli.jar generate \
          -i /var/workspace/build/dependencies/openapi.yaml \
          -g go \
          -o /var/workspace/pkg/galasaapi \
          --additional-properties=packageName=galasaapi \
          --global-property=apiTests=false

      # The generated code needs adjustment for various reasons.
      - name: Fix generated code
        working-directory: ./modules/cli
        run : |
          chmod +x ./fix-generated-code.sh
          ./fix-generated-code.sh

      # The go.mod and go.sum are out of date, as they do not include the generated code so they are deleted here. They get re-generated when we compile.
      # Due to permissions, deleting the go.mod and go.sum must be done by the openapi image as the image generated those files.

      - name: Clear go.mod
        run : |
          docker run --rm -v ${{ github.workspace }}/modules/cli:/var/workspace ghcr.io/galasa-dev/openapi:main \
          rm /var/workspace/pkg/galasaapi/go.mod

      - name: Clear go.sum
        run : |
          docker run --rm -v ${{ github.workspace }}/modules/cli:/var/workspace ghcr.io/galasa-dev/openapi:main \
          rm /var/workspace/pkg/galasaapi/go.sum

      # The go code needs to know which version of Galasa it is part of, so substitute an eye-catcher with the correct value.
      - name: Update version
        working-directory: ./modules/cli
        run : |
          version=$(cat VERSION) &&
          cat pkg/cmd/root.go | sed "s/unknowncliversion-unknowngithash/${version}/1" > temp.txt &&
          mv -f temp.txt pkg/cmd/root.go &&
          cat pkg/cmd/root.go

      # Invoke the make command to build the go code, run unit tests and gather code coverage stats.
      - name: Build Go code with the Makefile
        working-directory: ./modules/cli
        run : |
          make all

      # Generate the CLI syntax markdown documentation into a zip, published to maven
      - name: Package and publish the CLI syntax documentation
        working-directory: ./modules/cli
        run : |
          set -o pipefail
          gradle -b build.gradle publish --info --warning-mode all \
          --no-daemon --console plain \
          -PsourceMaven=/home/runner/.m2/repository \
          -PcentralMaven=https://repo.maven.apache.org/maven2/ \
          -PtargetMaven=${{ github.workspace }}/modules/cli/repo 2>&1 | tee build-docs.log      

      - name: Upload CLI docs build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cli-docs-gradle-build-log
          path: modules/cli/build-docs.log
          retention-days: 7

      - name: Upload cli docs built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli
          path: modules/cli/repo


      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'

      - name: Chmod local test script
        working-directory: ./modules/cli
        run: | 
          chmod +x test-galasactl-local.sh

      - name: Run local test script with Maven
        working-directory: ./modules/cli
        run : |
          ./test-galasactl-local.sh --buildTool maven

      - name: Run local test script with Gradle
        working-directory: ./modules/cli
        run : |
          ./test-galasactl-local.sh --buildTool gradle

      # Skip testing of Galasa service related commands if the
      # GALASA_TOKEN_ECOSYSTEM1 secret is not set as the test
      # script will not be able to authenticate to ecosystem1.
      - name: Check if secret GALASA_TOKEN_ECOSYSTEM1 exists
        continue-on-error: true
        env:
          GALASA_TOKEN_ECOSYSTEM1: ${{ secrets.GALASA_TOKEN_ECOSYSTEM1 }}
        run: |
          if [ -z "${GALASA_TOKEN_ECOSYSTEM1}" ] || [ "${GALASA_TOKEN_ECOSYSTEM1}" = "" ]; then
            echo "GALASA_TOKEN_ECOSYSTEM1 is not set. Skipping tests where the CLI interacts with the Galasa service."
            exit 1
          else
            echo "GALASA_TOKEN_ECOSYSTEM1 is set. Proceeding with tests where the CLI interacts with the Galasa service."
          fi
        id: check-galasa-token

      - name: Set environment variables
        if: ${{ steps.check-galasa-token.outcome == 'success' }}
        env:
          GALASA_HOME: /home/runner/galasa
          GALASA_TOKEN: ${{ secrets.GALASA_TOKEN_ECOSYSTEM1 }}
        run : |
          echo "GALASA_HOME=${{ env.GALASA_HOME }}" >> $GITHUB_ENV
          echo "GALASA_TOKEN=${{ env.GALASA_TOKEN }}" >> $GITHUB_ENV

      - name: Run ecosystem test script
        if: ${{ steps.check-galasa-token.outcome == 'success' }}
        working-directory: ./modules/cli
        run : |
          chmod +x test-galasactl-ecosystem.sh
          ./test-galasactl-ecosystem.sh --bootstrap https://galasa-ecosystem1.galasa.dev/api/bootstrap

      - name: Build Docker image with galasactl executable
        uses: docker/build-push-action@v5
        with:
          context: modules/cli
          file: modules/cli/dockerfiles/dockerfile.galasactl
          load: true
          tags: galasactl-x86_64:test
          build-args: |
            platform=linux-x86_64

      - name: Build Docker image with galasactl executable and IBM certificates
        uses: docker/build-push-action@v5
        with:
          context: modules/cli/dockerfiles/certs
          file: modules/cli/dockerfiles/dockerfile.galasactl-ibm
          load: true
          tags: galasactl-ibm-x86_64:test
          build-args: |
            dockerRepository=${{ env.REGISTRY }}
            tag=main

      - name: Build Docker image for development download site
        uses: docker/build-push-action@v5
        with:
          context: modules/cli
          file: modules/cli/dockerfiles/dockerfile.galasactl-executables
          load: true
          tags: galasactl-executables:test