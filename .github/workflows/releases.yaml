#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: Release Build Orchestrator

on:
  workflow_dispatch:
    inputs:
      jacoco_enabled:
        description: 'True if Jacoco code coverage should be enabled (set to "false" for release builds)'
        required: true
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'
      sign_artifacts:
        description: 'True if the artifacts built should be signed (set to "false" for development branch builds)'
        required: true
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

jobs:

  set-build-properties:
    # Only run this workflow if coming from the original galasa-dev/galasa repository.
    if: ${{ github.repository_owner == 'galasa-dev' }}
    # Use the version.properties file to source the galasa-version output variable.
    # This variable can be referenced by other jobs in this flow using 
    # ${{ needs.set-build-properties.outputs.galasa-version }}
    runs-on: ubuntu-latest
    outputs:
      galasa-version: ${{ steps.set-build-properties.outputs.GALASA_VERSION }}
    steps:
      - id: checkout-code
        uses: actions/checkout@v4 
        with:
          sparse-checkout: |
            build.properties
          sparse-checkout-cone-mode: false

      - id: set-build-properties
        run: |
          cat build.properties | grep "=" >> $GITHUB_OUTPUT

  check-required-secrets-configured:
    # Only run this workflow if coming from the original galasa-dev/galasa repository.
    if: ${{ github.repository_owner == 'galasa-dev' }}
    name: Check required secrets configured
    uses: ./.github/workflows/check-required-secrets-configured.yaml
    with:
      check_write_github_packages_username: 'true'
      check_write_github_packages_token: 'true'
      check_gpg_key: 'true'
      check_gpg_keyid: 'true'
      check_gpg_passphrase: 'true'
    secrets:
      WRITE_GITHUB_PACKAGES_TOKEN: ${{ secrets.WRITE_GITHUB_PACKAGES_TOKEN }}
      GPG_KEY: ${{ secrets.GPG_KEY }}
      GPG_KEYID: ${{ secrets.GPG_KEYID }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  build-platform:
    name: Build the 'platform' module
    needs: [check-required-secrets-configured]
    uses: ./.github/workflows/platform.yaml
    secrets: inherit

  build-buildutils:
    name: Build the 'buildutils' module
    needs: [check-required-secrets-configured]
    uses: ./.github/workflows/buildutils.yaml
    secrets: inherit

  build-wrapping:
    name: Build the 'wrapping' module
    needs: [build-platform]
    uses: ./.github/workflows/wrapping.yaml
    secrets: inherit
    with:
      jacoco_enabled: ${{ inputs.jacoco_enabled }}
      sign_artifacts: ${{ inputs.sign_artifacts }}

  build-gradle:
    name: Build the 'gradle' module
    needs: [build-platform]
    uses: ./.github/workflows/gradle.yaml
    secrets: inherit
    with:
      jacoco_enabled: ${{ inputs.jacoco_enabled }}
      sign_artifacts: ${{ inputs.sign_artifacts }}

  build-maven:
    name: Build the 'maven' module
    needs: [build-gradle]
    uses: ./.github/workflows/maven.yaml
    secrets: inherit
    with:
      jacoco_enabled: ${{ inputs.jacoco_enabled }}
      sign_artifacts: ${{ inputs.sign_artifacts }}

  build-framework:
    name: Build the 'framework' module
    needs: [build-buildutils, build-wrapping, build-maven]
    uses: ./.github/workflows/framework.yaml
    secrets: inherit
    with:
      jacoco_enabled: ${{ inputs.jacoco_enabled }}
      sign_artifacts: ${{ inputs.sign_artifacts }}

  build-extensions:
    name: Build the 'extensions' module
    needs: [build-framework]
    uses: ./.github/workflows/extensions.yaml
    secrets: inherit
    with:
      jacoco_enabled: ${{ inputs.jacoco_enabled }}
      sign_artifacts: ${{ inputs.sign_artifacts }}

  build-managers:
    name: Build the 'managers' module
    needs: [build-framework]
    uses: ./.github/workflows/managers.yaml
    secrets: inherit
    with:
      jacoco_enabled: ${{ inputs.jacoco_enabled }}
      sign_artifacts: ${{ inputs.sign_artifacts }}

  build-obr:
    name: Build the 'obr' module
    needs: [build-extensions, build-managers, set-build-properties]
    uses: ./.github/workflows/obr.yaml
    secrets: inherit
    with:
      galasa-version: "${{ needs.set-build-properties.outputs.galasa-version }}"

  build-cli:
    name: Build the 'cli' module
    needs: [build-obr]
    uses: ./.github/workflows/cli.yaml
    secrets: inherit

  build-docs:
    name: Build the documentation
    needs: [build-cli]
    uses: ./.github/workflows/docs.yaml
    secrets: inherit
