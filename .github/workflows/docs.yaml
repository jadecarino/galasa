#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: Galasa documentation branch/main build

on:
  workflow_call:

env:
  BRANCH: ${{ github.ref_name }}

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the docs source
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docs

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 

      - uses: actions/cache@v4
        with:
          key: mkdocs-material-
          path: .cache
          restore-keys: |
            mkdocs-material-

      # We can download the zipped markdown for CLI syntax 
      # generated by the CLI build, and placed into the 
      # maven repository.
      - name: Download cli artifacts from this workflow
        id: download-cli
        uses: actions/download-artifact@v4
        with:
          name: cli
          path: /home/runner/.m2/repository

      # We can download the zipped javadoc from the obr build
      # generated by the CLI build, and placed into the 
      # maven repository.
      - name: Download javadoc artifacts from this workflow
        id: download-javadoc
        uses: actions/download-artifact@v4
        with:
          name: javadoc
          path: /home/runner/.m2/repository

      # - name: Download rest-api artifacts from this workflow
      #   id: download-rest-api
      #   continue-on-error: true
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: rest-api-docs
      #     path: /home/runner/.m2/repository

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9
          cache-disabled: true
          gradle-home-cache-excludes: |
            caches/modules-2/files-2.1/dev.galasa/**

      - name: Install python packages
        run: |
          pip install --user -r docs/requirements.txt

      - name: Build and package the docs
        working-directory: ./docs
        run : |
          set -o pipefail
          gradle -b build.gradle publish --info --warning-mode all \
          --no-daemon --console plain \
          -PsourceMaven=/home/runner/.m2/repository \
          -PcentralMaven=https://repo.maven.apache.org/maven2/ \
          -PtargetMaven=${{ github.workspace }}/docs/repo 2>&1 | tee build-docs.log      

      - name: Upload build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docs-gradle-build-log
          path: docs/build-docs.log
          retention-days: 7
      
      - name: Upload docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-maven
          path: docs/repo

      - name: Upload docs site
        uses: actions/upload-artifact@v4
        with:
          name: galasa-docs-site
          path: docs/build/site

  deploy-docs-pr-preview-to-github-pages:

    if: ${{ (github.ref_name == 'main') }}

    # Add a dependency to the build job
    needs: build-docs

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:

      - name: Configure git user
        run: |
          git config --global user.name "galasa-team"
          git config --global user.email "galasa.team@gmail.com"
          git config user.email
          git config user.name

      - name: Clone galasa-docs-preview repository
        env: 
          GITHUB_PAT: ${{ secrets.GALASA_TEAM_GITHUB_TOKEN_AUTH_IN_WORKFLOWS }}
        run: |
          git clone https://galasa-team:${{ env.GITHUB_PAT }}@github.com/galasa-dev/galasa-docs-preview.git

      - name: Clean out the docs which are currently in the main branch of the preview repo.
        working-directory: galasa-docs-preview
        run: |
          rm -fr docs

      - name: Download the docs zip we built
        id: download-built-docs
        continue-on-error: false
        uses: actions/download-artifact@v4
        with:
          name: galasa-docs-site
          path: galasa-docs-preview/docs

      # It turns out that when you deploy something to gh pages, you need to create this file
      # in the root folder which GH pages serves up to contain the custom domain,
      # so that github pages can route traffic to the correct place.
      # We serve pages from the /docs folder inside the repo, so it goes there.
      # Without this, it won't be able to route traffic correctly resulting in broken, and 
      # will appear to 'forget' where vnext.galasa.dev is hosted from.
      - name: Add the CNAME file so github pages knows
        working-directory: galasa-docs-preview/docs
        run: |
          echo "vnext.galasa.dev" > "CNAME"

      - name: Push the changes to the preview git repo
        working-directory: galasa-docs-preview
        run: |
          git add .
          git commit -m "Automated update from the galasa-dev/galasa repo." \
                     -m "Source branch ${{ env.BRANCH }} git head commit id: ${{ github.event.head_commit.id }}" 
          git push origin main

  report-failure:
    # Skip this job for forks
    if: ${{ failure() && github.repository_owner == 'galasa-dev' }}
    name: Report failure in workflow
    runs-on: ubuntu-latest
    needs: [deploy-docs-pr-preview-to-github-pages]

    steps:
      - name: Report failure in workflow to Slack
        env: 
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run : |
          docker run --rm ghcr.io/galasa-dev/galasabld-ibm:main slackpost workflows --repo "galasa" --module "docs" --workflowName "${{ github.workflow }}" --workflowRunNum "${{ github.run_id }}" --ref "${{ env.BRANCH }}" --hook "${{ env.SLACK_WEBHOOK }}"
